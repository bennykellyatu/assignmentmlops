name: MLOPS Assignment Workflow

on:
  push:
    branches:
      - main
      - development
      - feature/workflow
      - feature/workflow-2
  workflow_dispatch:

jobs:
  mlops-pipeline:
    name: MLOPS Pipeline
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install Python
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip python3-venv
          python3 --version
      
      - name: Create virtual environment and install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Clean data
        run: |
          source venv/bin/activate
          cd ModelCleaning
          python Cleandata.py

      - name: Train Data
        run: |
          source venv/bin/activate
          cd ModelCleaning
          python train_test_dataset.py

      - name: Install Docker & Verify Installation
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          sudo usermod -aG docker $USER
          sudo systemctl start docker
          sudo systemctl enable docker
          newgrp docker
          docker --version

      - name: Build & Tag Docker Image
        run: |
          sudo docker build -t ice-cream-api:latest .
          sudo docker tag ice-cream-api:latest ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:latest
          sudo docker tag ice-cream-api:latest ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:${{ github.sha }}

      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:latest
          sudo docker push ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:${{ github.sha }}

      - name: Deploy to Docker Swarm via SSH
        run: |
          # Create SSH key file
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/ssh-key
          chmod 600 /tmp/ssh-key
          
          # Get the external IP of the swarm manager
          SWARM_IP=$(gcloud compute instances describe ${{ secrets.SWARM_MANAGER_INSTANCE }} \
            --zone=${{ secrets.GOOGLE_ZONE }} \
            --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          
          # Deploy via SSH
          ssh -i /tmp/ssh-key -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@$SWARM_IP << 'EOF'
            # Login to Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            # Pull latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:latest
            
            # Deploy or update service
            if docker service ls | grep -q ice-cream-api; then
              echo "Updating existing service..."
              docker service update --image ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:latest ice-cream-api
            else
              echo "Creating new service..."
              docker service create \
                --name ice-cream-api \
                --replicas 3 \
                --publish 80:5000 \
                ${{ secrets.DOCKERHUB_USERNAME }}/ice-cream-api:latest
            fi
            
            # Show service status
            docker service ls
            docker service ps ice-cream-api
          EOF
          
          # Clean up SSH key
          rm /tmp/ssh-key